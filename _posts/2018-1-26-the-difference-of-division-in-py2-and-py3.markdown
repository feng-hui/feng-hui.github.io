---
layout: post
title: "python2和python3中除法的相同与不同"
date: 2018-1-26
description: python2和python3中除法的相同与不同
tags: [python]
---
## python2和python3中除法的相同与不同
> python2 和 python3 中的除法是有所差别的，如果结果为小数，必须保证除数与被除数有一个为浮点数。

**1、整数相除(/)**

例如：3 / 5，在传统意义的数学运算上，结果为0.6，但是在不同的python环境中这个结果是不一样的。在python2中该结果为0，在python3中该结果为0.6.

```print 3 / 5``` 结果为0


```print(3 / 5)``` 结果为0.6

**2、整数地板除(//)**

```print 3 // 5```  结果为0

```print(3 // 5)```  结果为0

**3、模运算(%)**

```print 3 % 5```  结果为3

```print(3 % 5)```  结果为3

**4、被除数或除数有一个浮点数相除(/)**

* 被除数为浮点数

```print 3.0 / 5``` 结果为0.6

```print(3.0 / 5)``` 结果为0.6

* 除数为浮点数

```print 3 / 5.0``` 结果为0.6

```print(3.0 / 5)``` 结果为0.6

**5、浮点数相除,使用int取整均为向下取整**

_结果小于1(不管小数点后是否大于5),向下取整_

* 0.6

```print int(3 / 5.0)``` 结果为0

```print(int(3 / 5.0))``` 结果为0

* 0.4

```print int(2 / 5.0)``` 结果为0

```print(int(2 / 5.0))``` 结果为0


_结果大于1(不管小数点后是否大于5),依然向下取整_

* 1.5

```print int(3 / 2.0)``` 结果为1

```print(int(3 / 2.0))``` 结果为1

* 1.2

```print int(3 / 2.5)``` 结果为1

```print(int(3 / 2.5))``` 结果为1

_温馨提示:向上取整可以使用math.ceil()，全部都为向上取整，向下取整可以使用math.floor()_











